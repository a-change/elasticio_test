{
  api_version: "2.0"
  default_mapper_type: jsonata
  description: null
  graph:
  {
    edges:
    [
      {
        id: step_1:step_3
        source: step_1
        target: step_3
      }
      {
        id: step_3:step_4
        source: step_3
        target: step_4
      }
    ]
    nodes:
    [
      {
        command:
        {
          actionOrTrigger: pollingTrigger
          componentVersion: fc8b5b6acd61e9e6efcce6b966b10ac19cbd2592
        }
        component_id:
        {
          componentDevTeam: elasticio
          componentId: 56781c9873917c0a000000cf
          componentName: sftp
          componentSemanticVersion: 1.4.8
        }
        credentials_id:
        {
          credentialId: 602aaed11335120011b1cb3d
          credentialName: vh328.timeweb.ru
        }
        description: ""
        fields:
        {
          directory: alshaya-test
          emitBehaviour: fetchAll
        }
        first: true
        id: step_1
        name: ""
        selected_data_samples:
        [
          {
            method: pollingTrigger
            result:
            {
              attachments:
              {
                actionPointBalance.json:
                {
                  size: 591
                  url: http://maester-service.platform.svc.cluster.local:3002/objects/3a3be780-3385-46a6-ad9e-40e985d7ec81?storage_type=maester
                }
              }
              body:
              {
                results:
                [
                  {
                    accessTime: 2022-06-27T16:58:28.000Z
                    directory: alshaya-test
                    filename: actionPointBalance.json
                    modifyTime: 2022-06-27T16:58:28.000Z
                    path: alshaya-test/actionPointBalance.json
                    size: 591
                    type: -
                  }
                ]
              }
              headers: {}
              id: 04c70dc7-e940-48d8-abc0-15c59a881b71
              metadata: {}
              passthrough:
              {
                step_1:
                {
                  attachments:
                  {
                    actionPointBalance.json:
                    {
                      size: 591
                      url: http://maester-service.platform.svc.cluster.local:3002/objects/3a3be780-3385-46a6-ad9e-40e985d7ec81?storage_type=maester
                    }
                  }
                  body:
                  {
                    results:
                    [
                      {
                        accessTime: 2022-06-27T16:58:28.000Z
                        directory: alshaya-test
                        filename: actionPointBalance.json
                        modifyTime: 2022-06-27T16:58:28.000Z
                        path: alshaya-test/actionPointBalance.json
                        size: 591
                        type: -
                      }
                    ]
                  }
                  headers: {}
                  id: 04c70dc7-e940-48d8-abc0-15c59a881b71
                  metadata: {}
                }
              }
              stepId: step_1
            }
          }
        ]
      }
      {
        command:
        {
          actionOrTrigger: execute
          componentVersion: 2ddfa9babce1c520bca5218499932176f68d933f
        }
        component_id:
        {
          componentDevTeam: elasticio
          componentId: 566d7ca473917c0a0000005c
          componentName: code
          componentSemanticVersion: 1.2.8
        }
        description: ""
        fields:
        {
          code:
            '''
            // Please note only Node.js code is supported here
            const {createWriteStream, createReadStream} = require('fs');

            async function run(msg, cfg, snapshot) {
            	this.logger.info('Incoming message is %s', JSON.stringify(msg));
            	const body = { result : 'Hello world!' };
            	// You can emit as many data messages as required
            	await this.emit('data', { body });
            	this.logger.info('Execution finished');
            }

            '''
        }
        id: step_3
        name: ""
        selected_data_samples:
        [
          {
            method: execute
            result:
            {
              body: {}
            }
          }
        ]
      }
      {
        command:
        {
          actionOrTrigger: execute
          componentVersion: 2ddfa9babce1c520bca5218499932176f68d933f
        }
        component_id:
        {
          componentDevTeam: elasticio
          componentId: 566d7ca473917c0a0000005c
          componentName: code
          componentSemanticVersion: 1.2.8
        }
        description: ""
        fields:
        {
          code:
            '''
            // Please note only Node.js code is supported here
            async function run(msg, cfg, snapshot) {
            	this.logger.info('Incoming message is %s', JSON.stringify(msg));
            	const body = { result : 'Hello world!' };
            	// You can emit as many data messages as required
            	await this.emit('data', { body });
            	this.logger.info('Execution finished');
            }
            '''
        }
        id: step_4
        name: ""
        selected_data_samples:
        [
          {
            method: execute
            result:
            {
              body: {}
            }
          }
        ]
      }
    ]
  }
  name: sftp.get-files.test.1
  nodes_config: {}
  stats_enabled: true
  type: ordinary
}